{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\react js\\\\online-shop\\\\src\\\\Components\\\\ProductsHeader\\\\ProductsHeader.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ProductsHeader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openPriceDialog: false\n    };\n  }\n\n  render() {\n    let _this$props = this.props,\n        parsedQueryStr = _this$props.parsedQueryStr,\n        totalItemsCount = _this$props.totalItemsCount,\n        updateQueryStr = _this$props.updateQueryStr; // Lot of values come from the query string.\n\n    let usePriceFilter = parsedQueryStr.usePriceFilter === \"true\";\n    let minPrice = parsedQueryStr.minPrice || 0;\n    let maxPrice = parsedQueryStr.maxPrice || 1000;\n    let sortValue = parsedQueryStr.sortValue || \"lh\";\n    let keyword = parsedQueryStr.term;\n    let category = parsedQueryStr.category;\n    let subtitle = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontSize: 12,\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, totalItemsCount + \" result\" + (totalItemsCount === 1 ? \" \" : \"s \") + (keyword ? \"for \" : \"\")), keyword && React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 12,\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, keyword));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10,\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        fontSize: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, category ? category : \"Popular Products\"), subtitle), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: usePriceFilter,\n        onChange: e => {\n          updateQueryStr({\n            usePriceFilter: e.target.checked,\n            page: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      label: \"Filter by price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), usePriceFilter && React.createElement(Tooltip, {\n      title: \"Click to change range\",\n      disableFocusListener: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        marginRight: 20\n      },\n      onClick: () => {\n        this.setState({\n          openPriceDialog: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\".concat(minPrice, \"$-\").concat(maxPrice, \"$\"))), React.createElement(Select, {\n      value: sortValue,\n      onChange: e => {\n        updateQueryStr({\n          sortValue: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"lh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Sort by price: low to high\"), React.createElement(MenuItem, {\n      value: \"hl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Sort by price: high to low\"))), React.createElement(PriceDialog, {\n      open: this.state.openPriceDialog,\n      min: minPrice,\n      max: maxPrice,\n      onSave: (min, max) => {\n        this.setState({\n          openPriceDialog: false\n        });\n        updateQueryStr({\n          minPrice: min,\n          maxPrice: max,\n          page: 1\n        });\n      },\n      onClose: () => this.setState({\n        openPriceDialog: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(ProductsHeader);","map":{"version":3,"sources":["D:/react/react js/online-shop/src/Components/ProductsHeader/ProductsHeader.js"],"names":["React","Component","Button","Tooltip","PriceDialog","MenuItem","Select","FormControlLabel","Checkbox","withRouter","ProductsHeader","state","openPriceDialog","render","props","parsedQueryStr","totalItemsCount","updateQueryStr","usePriceFilter","minPrice","maxPrice","sortValue","keyword","term","category","subtitle","fontSize","color","fontWeight","padding","display","alignItems","flex","e","target","checked","page","marginRight","setState","value","min","max"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ProductsHeader extends Component {\r\n  state = {\r\n    openPriceDialog: false\r\n  };\r\n\r\n  render() {\r\n    let { parsedQueryStr, totalItemsCount, updateQueryStr } = this.props;\r\n\r\n    // Lot of values come from the query string.\r\n    let usePriceFilter = parsedQueryStr.usePriceFilter === \"true\";\r\n    let minPrice = parsedQueryStr.minPrice || 0;\r\n    let maxPrice = parsedQueryStr.maxPrice || 1000;\r\n    let sortValue = parsedQueryStr.sortValue || \"lh\";\r\n    let keyword = parsedQueryStr.term;\r\n    let category = parsedQueryStr.category;\r\n\r\n    let subtitle = (\r\n      <div>\r\n        <span style={{ fontSize: 12, color: \"gray\" }}>\r\n          {totalItemsCount +\r\n            \" result\" +\r\n            (totalItemsCount === 1 ? \" \" : \"s \") +\r\n            (keyword ? \"for \" : \"\")}\r\n        </span>\r\n        {keyword && (\r\n          <span\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 12,\r\n              color: \"gray\"\r\n            }}\r\n          >\r\n            {keyword}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ padding: 10, display: \"flex\", alignItems: \"center\" }}>\r\n          <div style={{ flex: 1, fontSize: 24 }}>\r\n            <div>{category ? category : \"Popular Products\"}</div>\r\n            {subtitle}\r\n          </div>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                checked={usePriceFilter}\r\n                onChange={e => {\r\n                  updateQueryStr({\r\n                    usePriceFilter: e.target.checked,\r\n                    page: 1\r\n                  });\r\n                }}\r\n              />\r\n            }\r\n            label=\"Filter by price\"\r\n          />\r\n          {usePriceFilter && (\r\n            <Tooltip title=\"Click to change range\" disableFocusListener>\r\n              <Button\r\n                variant=\"outlined\"\r\n                style={{ marginRight: 20 }}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    openPriceDialog: true\r\n                  });\r\n                }}\r\n              >\r\n                {`${minPrice}$-${maxPrice}$`}\r\n              </Button>\r\n            </Tooltip>\r\n          )}\r\n          <Select\r\n            value={sortValue}\r\n            onChange={e => {\r\n              updateQueryStr({ sortValue: e.target.value });\r\n            }}\r\n          >\r\n            <MenuItem value={\"lh\"}>Sort by price: low to high</MenuItem>\r\n            <MenuItem value={\"hl\"}>Sort by price: high to low</MenuItem>\r\n          </Select>\r\n        </div>\r\n\r\n        {/* This is dialog which opens up for setting price filter */}\r\n        <PriceDialog\r\n          open={this.state.openPriceDialog}\r\n          min={minPrice}\r\n          max={maxPrice}\r\n          onSave={(min, max) => {\r\n            this.setState({ openPriceDialog: false });\r\n            updateQueryStr({ minPrice: min, maxPrice: max, page: 1 });\r\n          }}\r\n          onClose={() =>\r\n            this.setState({\r\n              openPriceDialog: false\r\n            })\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProductsHeader);\r\n"]},"metadata":{},"sourceType":"module"}