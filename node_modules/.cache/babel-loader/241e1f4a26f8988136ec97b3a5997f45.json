{"ast":null,"code":"import _objectSpread from \"D:\\\\react\\\\react js\\\\online-shop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\react\\\\react js\\\\online-shop\\\\src\\\\Components\\\\Menu\\\\Menu.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { dataForTheMenu } from \"../../Data\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Icon from \"@material-ui/core/Icon\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nconst mapStateToProps = state => {\n  return {\n    showMenu: state.showMenu\n  };\n};\n\nclass ConnectedMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // initially item with id 1 is expanded\n      expandedMenuItems: {\n        1: true\n      },\n      dataForTheMenu\n    };\n    this.renderMenu = this.renderMenu.bind(this);\n  } // This method determines from URL whether to highlight a menu item or not\n\n\n  isMenuItemActive(item, location) {\n    if (location.pathname === \"/\" && location.search) {\n      let queryStringParsed = queryString.parse(location.search);\n      return item.name === queryStringParsed.category;\n    }\n\n    return item.url === location.pathname;\n  }\n\n  renderMenu(data) {\n    return React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, data.map((x, i) => {\n      if (!x.children) {\n        return React.createElement(NavLink, {\n          to: x.url,\n          exact: true,\n          isActive: (param, location) => {\n            return this.isMenuItemActive(x, location);\n          },\n          style: {\n            textDecoration: \"none\",\n            color: \"rgb(32, 32, 34)\"\n          },\n          key: x.id,\n          activeStyle: {\n            color: \"#4282ad\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          dense: true,\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, x.icon, \"}\")), React.createElement(ListItemText, {\n          disableTypography: true,\n          primary: React.createElement(\"div\", {\n            style: {\n              color: \"inherit\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, x.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(Fragment, {\n          key: x.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          button: true,\n          dense: true,\n          onClick: () => {\n            // Update in state which menu items are expanded.\n            this.setState(ps => {\n              return {\n                expandedMenuItems: _objectSpread({}, ps.expandedMenuItems, {\n                  [x.id]: !ps.expandedMenuItems[x.id]\n                })\n              };\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: x.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), this.state.expandedMenuItems[x.id] ? React.createElement(ExpandLess, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }) : React.createElement(ExpandMore, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })), React.createElement(Collapse, {\n          in: this.state.expandedMenuItems[x.id],\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.renderMenu(x.children)));\n      }\n    }));\n  }\n\n  render() {\n    if (!this.props.showMenu) return null;\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#FAFAFB\",\n        minWidth: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.renderMenu(this.state.dataForTheMenu));\n  }\n\n}\n\nconst Menu = withRouter(connect(mapStateToProps)(ConnectedMenu));\nexport default Menu;","map":{"version":3,"sources":["D:/react/react js/online-shop/src/Components/Menu/Menu.js"],"names":["React","Component","Fragment","NavLink","queryString","connect","withRouter","dataForTheMenu","ExpandLess","ExpandMore","Icon","List","ListItem","ListItemIcon","ListItemText","Collapse","mapStateToProps","state","showMenu","ConnectedMenu","constructor","props","expandedMenuItems","renderMenu","bind","isMenuItemActive","item","location","pathname","search","queryStringParsed","parse","name","category","url","data","map","x","i","children","param","textDecoration","color","id","fontWeight","icon","setState","ps","render","backgroundColor","minWidth","Menu"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { dataForTheMenu } from \"../../Data\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showMenu: state.showMenu\r\n  };\r\n};\r\n\r\nclass ConnectedMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // initially item with id 1 is expanded\r\n      expandedMenuItems: {\r\n        1: true\r\n      },\r\n      dataForTheMenu\r\n    };\r\n\r\n    this.renderMenu = this.renderMenu.bind(this);\r\n  }\r\n\r\n  // This method determines from URL whether to highlight a menu item or not\r\n  isMenuItemActive(item, location) {\r\n    if (location.pathname === \"/\" && location.search) {\r\n      let queryStringParsed = queryString.parse(location.search);\r\n\r\n      return item.name === queryStringParsed.category;\r\n    }\r\n\r\n    return item.url === location.pathname;\r\n  }\r\n\r\n  renderMenu(data) {\r\n    return (\r\n      <List>\r\n        {data.map((x, i) => {\r\n          if (!x.children) {\r\n            return (\r\n              <NavLink\r\n                to={x.url}\r\n                exact\r\n                isActive={(param, location) => {\r\n                  return this.isMenuItemActive(x, location);\r\n                }}\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"rgb(32, 32, 34)\"\r\n                }}\r\n                key={x.id}\r\n                activeStyle={{\r\n                  color: \"#4282ad\",\r\n                  fontWeight: \"bold\"\r\n                }}\r\n              >\r\n                <ListItem dense button>\r\n                  <ListItemIcon>\r\n                    <Icon>{x.icon}}</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    disableTypography\r\n                    primary={<div style={{ color: \"inherit\" }}>{x.name}</div>}\r\n                  />\r\n                </ListItem>\r\n              </NavLink>\r\n            );\r\n          } else {\r\n            return (\r\n              <Fragment key={x.id}>\r\n                <ListItem\r\n                  button\r\n                  dense\r\n                  onClick={() => {\r\n                    // Update in state which menu items are expanded.\r\n                    this.setState(ps => {\r\n                      return {\r\n                        expandedMenuItems: {\r\n                          ...ps.expandedMenuItems,\r\n                          [x.id]: !ps.expandedMenuItems[x.id]\r\n                        }\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  <ListItemText primary={x.name} />\r\n                  {this.state.expandedMenuItems[x.id] ? (\r\n                    <ExpandLess />\r\n                  ) : (\r\n                    <ExpandMore />\r\n                  )}\r\n                </ListItem>\r\n                <Collapse\r\n                  in={this.state.expandedMenuItems[x.id]}\r\n                  timeout=\"auto\"\r\n                  unmountOnExit\r\n                >\r\n                  {this.renderMenu(x.children)}\r\n                </Collapse>\r\n              </Fragment>\r\n            );\r\n          }\r\n        })}\r\n      </List>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.showMenu) return null;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#FAFAFB\",\r\n          minWidth: 250\r\n        }}\r\n      >\r\n        {/* Render our menu */}\r\n        {this.renderMenu(this.state.dataForTheMenu)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst Menu = withRouter(connect(mapStateToProps)(ConnectedMenu));\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}