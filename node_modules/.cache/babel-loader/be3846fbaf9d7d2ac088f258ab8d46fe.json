{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\react js\\\\online-shop\\\\src\\\\Components\\\\Login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Auth from \"../../Auth\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { setLoggedInUser } from \"../../Redux/Actions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nclass ConnectedLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      pass: \"\",\n      redirectToReferrer: false\n    };\n  }\n\n  render() {\n    const _ref = this.props.location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    },\n          from = _ref.from; // If user was authenticated, redirect her to where she came from.\n\n\n    if (this.state.redirectToReferrer === true) {\n      return React.createElement(Redirect, {\n        to: from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: 300,\n        width: 200,\n        padding: 30,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(LockOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginBottom: 20,\n        fontSize: 24,\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" \", \"Log in\", \" \"), React.createElement(TextField, {\n      value: this.state.userName,\n      placeholder: \"User name\",\n      onChange: e => {\n        this.setState({\n          userName: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      value: this.state.pass,\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => {\n        this.setState({\n          pass: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        marginTop: 20,\n        width: 200\n      },\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        // Simulate authentication call\n        Auth.authenticate(this.state.userName, this.state.pass, user => {\n          if (!user) {\n            this.setState({\n              wrongCred: true\n            });\n            return;\n          }\n\n          this.props.dispatch(setLoggedInUser({\n            name: user.name\n          }));\n          this.setState(() => ({\n            redirectToReferrer: true\n          }));\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Log in\"), this.state.wrongCred && React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Wrong username and/or password\")));\n  }\n\n}\n\nconst Login = withRouter(connect()(ConnectedLogin));\nexport default Login;","map":{"version":3,"sources":["D:/react/react js/online-shop/src/Components/Login/Login.js"],"names":["React","Component","withRouter","Redirect","connect","Auth","TextField","Button","setLoggedInUser","Avatar","LockOutlinedIcon","ConnectedLogin","state","userName","pass","redirectToReferrer","render","props","location","from","pathname","height","display","justifyContent","alignItems","width","padding","flexDirection","marginBottom","fontSize","textAlign","e","setState","target","value","marginTop","authenticate","user","wrongCred","dispatch","name","color","Login"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Auth from \"../../Auth\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { setLoggedInUser } from \"../../Redux/Actions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nclass ConnectedLogin extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    pass: \"\",\r\n    redirectToReferrer: false\r\n  };\r\n  render() {\r\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n\r\n    // If user was authenticated, redirect her to where she came from.\r\n    if (this.state.redirectToReferrer === true) {\r\n      return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: 300,\r\n            width: 200,\r\n            padding: 30,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <Avatar style={{ marginBottom: 10 }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <div\r\n            style={{\r\n              marginBottom: 20,\r\n              fontSize: 24,\r\n              textAlign: \"center\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Log in{\" \"}\r\n          </div>\r\n          <TextField\r\n            value={this.state.userName}\r\n            placeholder=\"User name\"\r\n            onChange={e => {\r\n              this.setState({ userName: e.target.value });\r\n            }}\r\n          />\r\n          <TextField\r\n            value={this.state.pass}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={e => {\r\n              this.setState({ pass: e.target.value });\r\n            }}\r\n          />\r\n          <Button\r\n            style={{ marginTop: 20, width: 200 }}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              // Simulate authentication call\r\n              Auth.authenticate(this.state.userName, this.state.pass, user => {\r\n                if (!user) {\r\n                  this.setState({ wrongCred: true });\r\n                  return;\r\n                }\r\n\r\n                this.props.dispatch(setLoggedInUser({ name: user.name }));\r\n                this.setState(() => ({\r\n                  redirectToReferrer: true\r\n                }));\r\n              });\r\n            }}\r\n          >\r\n            Log in\r\n          </Button>\r\n          {this.state.wrongCred && (\r\n            <div style={{ color: \"red\" }}>Wrong username and/or password</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst Login = withRouter(connect()(ConnectedLogin));\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}